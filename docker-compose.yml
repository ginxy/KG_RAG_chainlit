version: '3.8'

services:
  neo4j:
    image: neo4j:5-community
    environment:
      NEO4J_AUTH: "${NEO4J_USER}/${NEO4J_PASSWORD}"
      NEO4J_server_bolt_advertised__address: neo4j:7687
      NEO4J_server_http_advertised__address: neo4j:7474
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    networks:
      - kg_network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USER}", "-p", "${NEO4J_PASSWORD}", "RETURN 1"]
      interval: 15s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  ollama:
    build:
      context: .
      dockerfile: ollama/Dockerfile
      args:
        OLLAMA_MODEL: ${OLLAMA_MODEL}
    ports:
      - "11434:11434"
    environment:
      OLLAMA_HOST: 0.0.0.0:11434
      OLLAMA_MODEL: ${OLLAMA_MODEL}
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - kg_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - kg_network

  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - OLLAMA_HOST=${OLLAMA_HOST}
      - KG_SCORE_THRESHOLD=${KG_SCORE_THRESHOLD}
      - OLLAMA_MODEL=${OLLAMA_MODEL}
      - MAX_TOKENS=${MAX_TOKENS}
      - LLM_TEMP=${LLM_TEMP}
      - MAX_TEXT_CHUNK=${MAX_TEXT_CHUNK}
      - TEXT_OVERLAP=${TEXT_OVERLAP}
      - PDF_PAGE_LIMIT=${PDF_PAGE_LIMIT}
      - LOG_LEVEL=DEBUG
      - PYTHONUNBUFFERED=1
      - LITELLM_CACHE=False
      - LITELLM_DROP_PARAMS=True
      - LITELLM_MAX_STREAM_TIMEOUT=300
    deploy:
      resources:
        limits:
          memory: 6g
    mem_limit: 6g
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - kg_network
    depends_on:
      neo4j:
        condition: service_healthy
      ollama:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/_health"]
      interval: 60s
      timeout: 90s
      retries: 3
      start_period: 30s

networks:
  kg_network:
    driver: bridge

volumes:
  neo4j_data:
  ollama_data:
  qdrant_data:
